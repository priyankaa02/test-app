{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport rootSagas from './reducers/rootSagas';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport { persistReducer } from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\nexport const history = createHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [//\nsagaMiddleware, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  const logger = createLogger();\n  middlewares.push(logger);\n}\n\nconst persistConfig = {\n  transforms: [immutableTransform()]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSagas);\nexport default store;","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/store.js"],"names":["createStore","applyMiddleware","rootReducer","createSagaMiddleware","createLogger","rootSagas","createHistory","routerMiddleware","persistReducer","immutableTransform","history","sagaMiddleware","middlewares","process","env","NODE_ENV","logger","push","persistConfig","transforms","persistedReducer","store","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,OAAO,MAAMC,OAAO,GAAGJ,aAAa,EAA7B;AAEP,MAAMK,cAAc,GAAGR,oBAAoB,EAA3C;AACE,MAAMS,WAAW,GAAG,CAClB;AACAD,cAFkB,EAGlBJ,gBAAgB,CAACG,OAAD,CAHE,CAApB;;AAMA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAMC,MAAM,GAAGZ,YAAY,EAA3B;AACAQ,EAAAA,WAAW,CAACK,IAAZ,CAAiBD,MAAjB;AACD;;AAED,MAAME,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,CAACV,kBAAkB,EAAnB;AADQ,CAAtB;AAIA,MAAMW,gBAAgB,GAAGZ,cAAc,CAACU,aAAD,EAAgBhB,WAAhB,CAAvC;AAEA,MAAMmB,KAAK,GAAGrB,WAAW,CAACoB,gBAAD,EAAmBnB,eAAe,CAAC,GAAGW,WAAJ,CAAlC,CAAzB;AAEAD,cAAc,CAACW,GAAf,CAAmBjB,SAAnB;AAEA,eAAegB,KAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport {createLogger} from 'redux-logger';\nimport rootSagas from './reducers/rootSagas';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport {persistReducer} from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\n\nexport const history = createHistory()\n\nconst sagaMiddleware = createSagaMiddleware();\n  const middlewares = [\n    //\n    sagaMiddleware,\n    routerMiddleware(history)\n  ];\n\n  if (process.env.NODE_ENV === 'development') {\n    const logger = createLogger();\n    middlewares.push(logger);\n  }\n\n  const persistConfig = {\n    transforms: [immutableTransform()],\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\n  sagaMiddleware.run(rootSagas);\n\n  export default store;\n"]},"metadata":{},"sourceType":"module"}