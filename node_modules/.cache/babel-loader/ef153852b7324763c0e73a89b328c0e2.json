{"ast":null,"code":"import React from'react';import{Table,ListGroup,ListGroupItem}from'reactstrap';var DataSection=function DataSection(_ref){var obj=_ref.obj;var newObj=JSON.parse(obj);return React.createElement(\"div\",null,React.createElement(ListGroup,{className:\"list\"},React.createElement(ListGroupItem,null,React.createElement(\"strong\",null,\"City:\"),\" \",newObj.location.city,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Region:\"),\" \",newObj.location.region,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Country:\"),\" \",newObj.location.country),React.createElement(ListGroupItem,null,React.createElement(\"strong\",null,\"lat:\"),\" \",newObj.location.lat,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"long:\"),\" \",newObj.location.long,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"timezone:\"),\" \",newObj.location.timezone_id),React.createElement(ListGroupItem,null,React.createElement(\"strong\",null,\"Humidity:\"),\" \",newObj.current_observation.atmosphere.humidity,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Pressure:\"),\" \",newObj.current_observation.atmosphere.pressure,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Visibility:\"),\" \",newObj.current_observation.atmosphere.visibility),React.createElement(ListGroupItem,null,React.createElement(\"strong\",null,\"Condition:\"),\" \",newObj.current_observation.condition.text,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Code:\"),\" \",newObj.current_observation.condition.code,\"\\xA0\\xA0 \",React.createElement(\"strong\",null,\"Temperature:\"),\" \",newObj.current_observation.condition.temperature)),React.createElement(Table,{className:\"table\",bordered:true},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"day\"),React.createElement(\"th\",null,\"date\"),React.createElement(\"th\",null,\"low\"),React.createElement(\"th\",null,\"high\"),React.createElement(\"th\",null,\"text\"),React.createElement(\"th\",null,\"code\"))),React.createElement(\"tbody\",null,newObj.forecasts&&newObj.forecasts.map(function(item,i){return React.createElement(\"tr\",{key:i},React.createElement(\"td\",null,item.day),React.createElement(\"td\",null,item.date),React.createElement(\"td\",null,item.low),React.createElement(\"td\",null,item.high),React.createElement(\"td\",null,item.text),React.createElement(\"td\",null,item.code));}))));};export default DataSection;","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/components/WeatherCheck/DataSection.js"],"names":["React","Table","ListGroup","ListGroupItem","DataSection","obj","newObj","JSON","parse","location","city","region","country","lat","long","timezone_id","current_observation","atmosphere","humidity","pressure","visibility","condition","text","code","temperature","forecasts","map","item","i","day","date","low","high"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,aAA3B,KAAgD,YAAhD,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAW,IAATC,CAAAA,GAAS,MAATA,GAAS,CAC7B,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAf,CACA,MACE,gCACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,EACE,oBAAC,aAAD,MAAe,0CAAf,KAAuCC,MAAM,CAACG,QAAP,CAAgBC,IAAvD,aAAyE,4CAAzE,KAAmGJ,MAAM,CAACG,QAAP,CAAgBE,MAAnH,aAAuI,6CAAvI,KAAkKL,MAAM,CAACG,QAAP,CAAgBG,OAAlL,CADF,CAEE,oBAAC,aAAD,MAAe,yCAAf,KAAsCN,MAAM,CAACG,QAAP,CAAgBI,GAAtD,aAAuE,0CAAvE,KAA+FP,MAAM,CAACG,QAAP,CAAgBK,IAA/G,aAAiI,8CAAjI,KAA6JR,MAAM,CAACG,QAAP,CAAgBM,WAA7K,CAFF,CAGE,oBAAC,aAAD,MAAe,8CAAf,KAA2CT,MAAM,CAACU,mBAAP,CAA2BC,UAA3B,CAAsCC,QAAjF,aAAuG,8CAAvG,KAAmIZ,MAAM,CAACU,mBAAP,CAA2BC,UAA3B,CAAsCE,QAAzK,aAA+L,gDAA/L,KAA6Nb,MAAM,CAACU,mBAAP,CAA2BC,UAA3B,CAAsCG,UAAnQ,CAHF,CAIE,oBAAC,aAAD,MAAe,+CAAf,KAA4Cd,MAAM,CAACU,mBAAP,CAA2BK,SAA3B,CAAqCC,IAAjF,aAAmG,0CAAnG,KAA2HhB,MAAM,CAACU,mBAAP,CAA2BK,SAA3B,CAAqCE,IAAhK,aAAkL,iDAAlL,KAAiNjB,MAAM,CAACU,mBAAP,CAA2BK,SAA3B,CAAqCG,WAAtP,CAJF,CADF,CAOE,oBAAC,KAAD,EAAO,SAAS,CAAC,OAAjB,CAAyB,QAAQ,KAAjC,EACC,iCACE,8BACE,oCADF,CAEE,qCAFF,CAGE,oCAHF,CAIE,qCAJF,CAKE,qCALF,CAME,qCANF,CADF,CADD,CAWC,iCACClB,MAAM,CAACmB,SAAP,EAAoBnB,MAAM,CAACmB,SAAP,CAAiBC,GAAjB,CAAqB,SAACC,IAAD,CAAOC,CAAP,QACxC,2BAAI,GAAG,CAAEA,CAAT,EACE,8BAAKD,IAAI,CAACE,GAAV,CADF,CAEE,8BAAKF,IAAI,CAACG,IAAV,CAFF,CAGE,8BAAKH,IAAI,CAACI,GAAV,CAHF,CAIE,8BAAKJ,IAAI,CAACK,IAAV,CAJF,CAKE,8BAAKL,IAAI,CAACL,IAAV,CALF,CAME,8BAAKK,IAAI,CAACJ,IAAV,CANF,CADwC,EAArB,CADrB,CAXD,CAPF,CADF,CAkCD,CApCD,CAsCA,cAAenB,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { Table, ListGroup, ListGroupItem } from 'reactstrap';\n\nconst DataSection = ({obj}) => {\n  const newObj = JSON.parse(obj);\n  return (\n    <div>\n      <ListGroup className=\"list\">\n        <ListGroupItem><strong>City:</strong> {newObj.location.city}&nbsp;&nbsp; <strong>Region:</strong> {newObj.location.region}&nbsp;&nbsp; <strong>Country:</strong> {newObj.location.country}</ListGroupItem>\n        <ListGroupItem><strong>lat:</strong> {newObj.location.lat}&nbsp;&nbsp; <strong>long:</strong> {newObj.location.long}&nbsp;&nbsp; <strong>timezone:</strong> {newObj.location.timezone_id}</ListGroupItem>\n        <ListGroupItem><strong>Humidity:</strong> {newObj.current_observation.atmosphere.humidity}&nbsp;&nbsp; <strong>Pressure:</strong> {newObj.current_observation.atmosphere.pressure}&nbsp;&nbsp; <strong>Visibility:</strong> {newObj.current_observation.atmosphere.visibility}</ListGroupItem>\n        <ListGroupItem><strong>Condition:</strong> {newObj.current_observation.condition.text}&nbsp;&nbsp; <strong>Code:</strong> {newObj.current_observation.condition.code}&nbsp;&nbsp; <strong>Temperature:</strong> {newObj.current_observation.condition.temperature}</ListGroupItem>\n      </ListGroup>\n      <Table className=\"table\" bordered>\n       <thead>\n         <tr>\n           <th>day</th>\n           <th>date</th>\n           <th>low</th>\n           <th>high</th>\n           <th>text</th>\n           <th>code</th>\n         </tr>\n       </thead>\n       <tbody>\n       {newObj.forecasts && newObj.forecasts.map((item, i) => \n         <tr key={i}>\n           <td>{item.day}</td>\n           <td>{item.date}</td>\n           <td>{item.low}</td>\n           <td>{item.high}</td>\n           <td>{item.text}</td>\n           <td>{item.code}</td>\n        </tr>\n       )} \n       </tbody>\n    </Table>\n    </div>\n  );\n};\n\nexport default DataSection;"]},"metadata":{},"sourceType":"module"}