{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\nimport rootSagas from './reducers/rootSagas';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\nexport const history = createHistory();\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [//\n  sagaMiddleware, routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === 'development') {\n    const logger = createLogger();\n    middlewares.push(logger);\n  }\n\n  const persistConfig = {\n    transforms: [immutableTransform()]\n  };\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  const store = createStore(persistedReducer, applyMiddleware(...middlewares));\n  const persistor = persistStore(store);\n  sagaMiddleware.run(rootSagas);\n  return [store, persistor];\n};","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/store.js"],"names":["createStore","applyMiddleware","rootReducer","createSagaMiddleware","createLogger","rootSagas","createHistory","routerMiddleware","persistStore","persistReducer","immutableTransform","history","configureStore","sagaMiddleware","middlewares","process","env","NODE_ENV","logger","push","persistConfig","transforms","persistedReducer","store","persistor","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAGA,OAAO,MAAMC,OAAO,GAAGL,aAAa,EAA7B;AAEP,OAAO,MAAMM,cAAc,GAAG,MAAM;AAClC,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAClB;AACAD,EAAAA,cAFkB,EAGlBN,gBAAgB,CAACI,OAAD,CAHE,CAApB;;AAMA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,UAAMC,MAAM,GAAGd,YAAY,EAA3B;AACAU,IAAAA,WAAW,CAACK,IAAZ,CAAiBD,MAAjB;AACD;;AAED,QAAME,aAAa,GAAG;AACpBC,IAAAA,UAAU,EAAE,CAACX,kBAAkB,EAAnB;AADQ,GAAtB;AAIA,QAAMY,gBAAgB,GAAGb,cAAc,CAACW,aAAD,EAAgBlB,WAAhB,CAAvC;AAEA,QAAMqB,KAAK,GAAGvB,WAAW,CAACsB,gBAAD,EAAmBrB,eAAe,CAAC,GAAGa,WAAJ,CAAlC,CAAzB;AACA,QAAMU,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA9B;AAEAV,EAAAA,cAAc,CAACY,GAAf,CAAmBpB,SAAnB;AAEA,SAAO,CAACkB,KAAD,EAAQC,SAAR,CAAP;AACD,CAzBM","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport {createLogger} from 'redux-logger';\nimport rootSagas from './reducers/rootSagas';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport immutableTransform from 'redux-persist-transform-immutable';\n\n\nexport const history = createHistory()\n\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [\n    //\n    sagaMiddleware,\n    routerMiddleware(history)\n  ];\n\n  if (process.env.NODE_ENV === 'development') {\n    const logger = createLogger();\n    middlewares.push(logger);\n  }\n\n  const persistConfig = {\n    transforms: [immutableTransform()],\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = createStore(persistedReducer, applyMiddleware(...middlewares));\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSagas);\n\n  return [store, persistor];\n};\n"]},"metadata":{},"sourceType":"module"}