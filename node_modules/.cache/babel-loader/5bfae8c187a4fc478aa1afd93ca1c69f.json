{"ast":null,"code":"import { takeLatest, call, put, delay, race } from 'redux-saga/effects';\nimport { types as weatherTypes, actions as weatherActions } from './index';\nimport { fetchApi } from '../../api';\nimport { URL } from '../../constants';\n\nfunction* getWeather() {\n  try {\n    const _ref = yield race({\n      responseJson: call(fetchApi, {\n        url: URL.GET_WEATHER,\n        data: ''\n      }),\n      timeout: delay(10000)\n    }),\n          responseJson = _ref.responseJson,\n          timeout = _ref.timeout;\n\n    if (timeout) {\n      yield put(weatherActions.setFetchError(true));\n      yield weatherActions.setErrMsg('timeout');\n      console.log('timeout');\n    } else {\n      console.log('responseJson', responseJson);\n      const data = responseJson.data;\n      yield put(weatherActions.getWeatherSuccess(data));\n    } // yield put(weatherActions.setLoading(false));\n\n  } catch (e) {\n    const errMsg = e && e.error_description ? e.error_description : 'unknown error';\n    yield put(weatherActions.setErrMsg(errMsg));\n    yield put(weatherActions.setFetchError(true)); // yield put(weatherActions.setLoading(false));\n  }\n}\n\nexport default [takeLatest(weatherTypes.GET_WEATHER_REQUEST, getWeather)];","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/reducers/weather/weatherSaga.js"],"names":["takeLatest","call","put","delay","race","types","weatherTypes","actions","weatherActions","fetchApi","URL","getWeather","responseJson","url","GET_WEATHER","data","timeout","setFetchError","setErrMsg","console","log","getWeatherSuccess","e","errMsg","error_description","GET_WEATHER_REQUEST"],"mappings":"AAAA,SACIA,UADJ,EAEIC,IAFJ,EAGIC,GAHJ,EAIIC,KAJJ,EAKIC,IALJ,QAMS,oBANT;AAOE,SAAQC,KAAK,IAAIC,YAAjB,EAA+BC,OAAO,IAAIC,cAA1C,QAA+D,SAA/D;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;AAEA,UAAUC,UAAV,GAAuB;AACrB,MAAI;AAAA,iBAC8B,MAAMP,IAAI,CAAC;AACzCQ,MAAAA,YAAY,EAAEX,IAAI,CAACQ,QAAD,EAAW;AAC3BI,QAAAA,GAAG,EAAEH,GAAG,CAACI,WADkB;AAE3BC,QAAAA,IAAI,EAAE;AAFqB,OAAX,CADuB;AAKzCC,MAAAA,OAAO,EAAEb,KAAK,CAAC,KAAD;AAL2B,KAAD,CADxC;AAAA,UACKS,YADL,QACKA,YADL;AAAA,UACmBI,OADnB,QACmBA,OADnB;;AAQF,QAAIA,OAAJ,EAAa;AACX,YAAMd,GAAG,CAACM,cAAc,CAACS,aAAf,CAA6B,IAA7B,CAAD,CAAT;AACA,YAAMT,cAAc,CAACU,SAAf,CAAyB,SAAzB,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAJD,MAIO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,YAA5B;AADK,YAEEG,IAFF,GAEUH,YAFV,CAEEG,IAFF;AAGL,YAAMb,GAAG,CAACM,cAAc,CAACa,iBAAf,CAAiCN,IAAjC,CAAD,CAAT;AACD,KAhBC,CAiBF;;AACD,GAlBD,CAkBE,OAAOO,CAAP,EAAU;AACV,UAAMC,MAAM,GACVD,CAAC,IAAIA,CAAC,CAACE,iBAAP,GAA2BF,CAAC,CAACE,iBAA7B,GAAiD,eADnD;AAEA,UAAMtB,GAAG,CAACM,cAAc,CAACU,SAAf,CAAyBK,MAAzB,CAAD,CAAT;AACA,UAAMrB,GAAG,CAACM,cAAc,CAACS,aAAf,CAA6B,IAA7B,CAAD,CAAT,CAJU,CAKV;AACD;AACF;;AAED,eAAe,CACbjB,UAAU,CAACM,YAAY,CAACmB,mBAAd,EAAmCd,UAAnC,CADG,CAAf","sourcesContent":["import {\n    takeLatest,\n    call,\n    put,\n    delay,\n    race,\n  } from 'redux-saga/effects';\n  import {types as weatherTypes, actions as weatherActions} from './index';\n  import {fetchApi} from '../../api';\n  import {URL} from '../../constants';\n  \n  function* getWeather() {\n    try {\n      const {responseJson, timeout} = yield race({\n        responseJson: call(fetchApi, {\n          url: URL.GET_WEATHER,\n          data: '',\n        }),\n        timeout: delay(10000),\n      });\n      if (timeout) {\n        yield put(weatherActions.setFetchError(true));\n        yield weatherActions.setErrMsg('timeout');\n        console.log('timeout');\n      } else {\n        console.log('responseJson', responseJson);\n        const {data} = responseJson;\n        yield put(weatherActions.getWeatherSuccess(data));\n      }\n      // yield put(weatherActions.setLoading(false));\n    } catch (e) {\n      const errMsg =\n        e && e.error_description ? e.error_description : 'unknown error';\n      yield put(weatherActions.setErrMsg(errMsg));\n      yield put(weatherActions.setFetchError(true));\n      // yield put(weatherActions.setLoading(false));\n    }\n  }\n\n  export default [\n    takeLatest(weatherTypes.GET_WEATHER_REQUEST, getWeather),\n  ];\n  "]},"metadata":{},"sourceType":"module"}