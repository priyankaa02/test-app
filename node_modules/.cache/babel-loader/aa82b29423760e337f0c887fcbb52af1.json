{"ast":null,"code":"import _regeneratorRuntime from\"/Users/priyanka/Documents/weather-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getWeather);import{takeLatest,call,put,delay,race}from'redux-saga/effects';import{types as weatherTypes,actions as weatherActions}from'./index';import{fetchApi}from'../../api';import{URL}from'../../constants';function getWeather(actionObj){var _ref,responseJson,timeout,data,errMsg;return _regeneratorRuntime.wrap(function getWeather$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('actionObj',actionObj.payload);_context.prev=1;_context.next=4;return race({responseJson:call(fetchApi,{url:URL.GET_WEATHER+actionObj.payload}),timeout:delay(10000)});case 4:_ref=_context.sent;responseJson=_ref.responseJson;timeout=_ref.timeout;if(!timeout){_context.next=15;break;}_context.next=10;return put(weatherActions.setFetchError(true));case 10:_context.next=12;return weatherActions.setErrMsg('timeout');case 12:console.log('timeout');_context.next=19;break;case 15:console.log('responseJson',responseJson);data=responseJson.data;_context.next=19;return put(weatherActions.getWeatherSuccess(data));case 19:_context.next=21;return put(weatherActions.setLoading(false));case 21:_context.next=32;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](1);errMsg=_context.t0&&_context.t0.error_description?_context.t0.error_description:'unknown error';_context.next=28;return put(weatherActions.setErrMsg(errMsg));case 28:_context.next=30;return put(weatherActions.setFetchError(true));case 30:_context.next=32;return put(weatherActions.setLoading(false));case 32:case\"end\":return _context.stop();}}},_marked,null,[[1,23]]);}export default[takeLatest(weatherTypes.GET_WEATHER_REQUEST,getWeather)];","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/reducers/weather/weatherSaga.js"],"names":["getWeather","takeLatest","call","put","delay","race","types","weatherTypes","actions","weatherActions","fetchApi","URL","actionObj","console","log","payload","responseJson","url","GET_WEATHER","timeout","setFetchError","setErrMsg","data","getWeatherSuccess","setLoading","errMsg","error_description","GET_WEATHER_REQUEST"],"mappings":"iKAWYA,U,EAXZ,OACIC,UADJ,CAEIC,IAFJ,CAGIC,GAHJ,CAIIC,KAJJ,CAKIC,IALJ,KAMS,oBANT,CAOE,OAAQC,KAAK,GAAIC,CAAAA,YAAjB,CAA+BC,OAAO,GAAIC,CAAAA,cAA1C,KAA+D,SAA/D,CACA,OAAQC,QAAR,KAAuB,WAAvB,CACA,OAAQC,GAAR,KAAkB,iBAAlB,CAEA,QAAUX,CAAAA,UAAV,CAAqBY,SAArB,+JACEC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBF,SAAS,CAACG,OAAnC,EADF,gCAGoC,MAAMV,CAAAA,IAAI,CAAC,CACzCW,YAAY,CAAEd,IAAI,CAACQ,QAAD,CAAW,CAC3BO,GAAG,CAAEN,GAAG,CAACO,WAAJ,CAAkBN,SAAS,CAACG,OADN,CAAX,CADuB,CAIzCI,OAAO,CAAEf,KAAK,CAAC,KAAD,CAJ2B,CAAD,CAAV,CAHpC,0BAGWY,YAHX,MAGWA,YAHX,CAGyBG,OAHzB,MAGyBA,OAHzB,KASQA,OATR,2CAUM,MAAMhB,CAAAA,GAAG,CAACM,cAAc,CAACW,aAAf,CAA6B,IAA7B,CAAD,CAAT,CAVN,yBAWM,MAAMX,CAAAA,cAAc,CAACY,SAAf,CAAyB,SAAzB,CAAN,CAXN,QAYMR,OAAO,CAACC,GAAR,CAAY,SAAZ,EAZN,+BAcMD,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BE,YAA5B,EACOM,IAfb,CAeqBN,YAfrB,CAeaM,IAfb,kBAgBM,MAAMnB,CAAAA,GAAG,CAACM,cAAc,CAACc,iBAAf,CAAiCD,IAAjC,CAAD,CAAT,CAhBN,yBAkBI,MAAMnB,CAAAA,GAAG,CAACM,cAAc,CAACe,UAAf,CAA0B,KAA1B,CAAD,CAAT,CAlBJ,yFAoBUC,MApBV,CAqBM,aAAK,YAAEC,iBAAP,CAA2B,YAAEA,iBAA7B,CAAiD,eArBvD,kBAsBI,MAAMvB,CAAAA,GAAG,CAACM,cAAc,CAACY,SAAf,CAAyBI,MAAzB,CAAD,CAAT,CAtBJ,yBAuBI,MAAMtB,CAAAA,GAAG,CAACM,cAAc,CAACW,aAAf,CAA6B,IAA7B,CAAD,CAAT,CAvBJ,yBAwBI,MAAMjB,CAAAA,GAAG,CAACM,cAAc,CAACe,UAAf,CAA0B,KAA1B,CAAD,CAAT,CAxBJ,qEA4BA,cAAe,CACbvB,UAAU,CAACM,YAAY,CAACoB,mBAAd,CAAmC3B,UAAnC,CADG,CAAf","sourcesContent":["import {\n    takeLatest,\n    call,\n    put,\n    delay,\n    race,\n  } from 'redux-saga/effects';\n  import {types as weatherTypes, actions as weatherActions} from './index';\n  import {fetchApi} from '../../api';\n  import {URL} from '../../constants';\n  \n  function* getWeather(actionObj) {\n    console.log('actionObj', actionObj.payload)\n    try {\n      const {responseJson, timeout} = yield race({\n        responseJson: call(fetchApi, {\n          url: URL.GET_WEATHER + actionObj.payload,\n        }),\n        timeout: delay(10000),\n      });\n      if (timeout) {\n        yield put(weatherActions.setFetchError(true));\n        yield weatherActions.setErrMsg('timeout');\n        console.log('timeout');\n      } else {\n        console.log('responseJson', responseJson);\n        const {data} = responseJson;\n        yield put(weatherActions.getWeatherSuccess(data));\n      }\n      yield put(weatherActions.setLoading(false));\n    } catch (e) {\n      const errMsg =\n        e && e.error_description ? e.error_description : 'unknown error';\n      yield put(weatherActions.setErrMsg(errMsg));\n      yield put(weatherActions.setFetchError(true));\n      yield put(weatherActions.setLoading(false));\n    }\n  }\n\n  export default [\n    takeLatest(weatherTypes.GET_WEATHER_REQUEST, getWeather),\n  ];\n  "]},"metadata":{},"sourceType":"module"}