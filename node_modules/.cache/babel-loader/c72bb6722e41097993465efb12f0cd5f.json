{"ast":null,"code":"import _slicedToArray from \"/Users/priyanka/Documents/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyanka/Documents/weather-app/src/components/WeatherCheck/index.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Loading from '../Loading';\nimport { Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst WeatherCheck = ({\n  errMsg,\n  weatherData,\n  loading,\n  fetchErr,\n  reloadFunc\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdownOpen = _useState2[0],\n        setDropdownOpen = _useState2[1];\n\n  const _useState3 = useState('Select City'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dropdownValue = _useState4[0],\n        setDropdownValue = _useState4[1];\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const onClickSelect = val => {\n    setDropdownValue(val);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    size: \"lg\",\n    toggle: toggle,\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, dropdownValue), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    onClick: () => onClickSelect(\"New York\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"New York\"), React.createElement(DropdownItem, {\n    onClick: () => onClickSelect(\"Chicago\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Chicago\"), React.createElement(DropdownItem, {\n    onClick: () => onClickSelect(\"Washington\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Washington\"), React.createElement(DropdownItem, {\n    onClick: () => onClickSelect(\"San Francisco\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"San Francisco\"), React.createElement(DropdownItem, {\n    onClick: () => onClickSelect(\"Boston\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Boston\"))), React.createElement(Button, {\n    outline: true,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"primary\"));\n};\n\nexport default WeatherCheck;","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/components/WeatherCheck/index.js"],"names":["React","useState","useCallback","useEffect","Loading","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","WeatherCheck","errMsg","weatherData","loading","fetchErr","reloadFunc","dropdownOpen","setDropdownOpen","dropdownValue","setDropdownValue","toggle","prevState","onClickSelect","val"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,cAA1B,EAA0CC,YAA1C,EAAwDC,YAAxD,QAA2E,YAA3E;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,OAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AAAA,oBACoCd,QAAQ,CAAC,KAAD,CAD5C;AAAA;AAAA,QACGe,YADH;AAAA,QACiBC,eADjB;;AAAA,qBAEsChB,QAAQ,CAAC,aAAD,CAF9C;AAAA;AAAA,QAEGiB,aAFH;AAAA,QAEkBC,gBAFlB;;AAGJ,QAAMC,MAAM,GAAG,MAAMH,eAAe,CAACI,SAAS,IAAI,CAACA,SAAf,CAApC;;AACA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC3BJ,IAAAA,gBAAgB,CAACI,GAAD,CAAhB;AACH,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEP,YAAlB;AAAgC,IAAA,IAAI,EAAC,IAArC;AAA0C,IAAA,MAAM,EAAEI,MAAlD;AAA0D,IAAA,SAAS,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,aADH,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMI,aAAa,CAAC,UAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,SAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,YAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,eAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAJF,CADF,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,CADF;AAiBD,CA9BD;;AAgCA,eAAeZ,YAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\nimport Loading from '../Loading';\nimport {Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\nconst WeatherCheck = ({\n  errMsg,\n  weatherData,\n  loading,\n  fetchErr,\n  reloadFunc,\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownValue, setDropdownValue] = useState('Select City');\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const onClickSelect = (val) => {\n      setDropdownValue(val);\n  }\n  return (\n    <div className=\"container\">\n      <Dropdown isOpen={dropdownOpen} size=\"lg\" toggle={toggle} className=\"dropdown\">\n        <DropdownToggle caret>\n          {dropdownValue}\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={() => onClickSelect(\"New York\")}>New York</DropdownItem>\n          <DropdownItem onClick={() => onClickSelect(\"Chicago\")}>Chicago</DropdownItem>\n          <DropdownItem onClick={() => onClickSelect(\"Washington\")}>Washington</DropdownItem>\n          <DropdownItem onClick={() => onClickSelect(\"San Francisco\")}>San Francisco</DropdownItem>\n          <DropdownItem onClick={() => onClickSelect(\"Boston\")}>Boston</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Button outline color=\"primary\">primary</Button>\n    </div>\n  );\n};\n\nexport default WeatherCheck;\n"]},"metadata":{},"sourceType":"module"}