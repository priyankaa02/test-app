{"ast":null,"code":"import _slicedToArray from \"/Users/priyanka/Documents/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/priyanka/Documents/weather-app/src/components/WeatherCheck/index.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Loading from '../Loading';\nimport { Container, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst WeatherCheck = ({\n  errMsg,\n  weatherData,\n  loading,\n  fetchErr,\n  reloadFunc\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropdownOpen = _useState2[0],\n        setDropdownOpen = _useState2[1];\n\n  const _useState3 = useState('Select City'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dropdownValue = _useState4[0],\n        setDropdownValue = _useState4[1];\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const onClickSelect = () => setDropdownOpen(prevState => !prevState);\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(UncontrolledDropdown, {\n    isOpen: dropdownOpen,\n    size: \"lg\",\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, dropdownValue), React.createElement(DropdownMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    onClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Foo Action\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Bar Action\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Quo Action\"))));\n};\n\nexport default WeatherCheck;","map":{"version":3,"sources":["/Users/priyanka/Documents/weather-app/src/components/WeatherCheck/index.js"],"names":["React","useState","useCallback","useEffect","Loading","Container","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","WeatherCheck","errMsg","weatherData","loading","fetchErr","reloadFunc","dropdownOpen","setDropdownOpen","dropdownValue","setDropdownValue","toggle","prevState","onClickSelect"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,SAAT,EAAoBC,oBAApB,EAA0CC,cAA1C,EAA0DC,YAA1D,EAAwEC,YAAxE,QAA4F,YAA5F;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,OAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AAAA,oBACoCd,QAAQ,CAAC,KAAD,CAD5C;AAAA;AAAA,QACGe,YADH;AAAA,QACiBC,eADjB;;AAAA,qBAEsChB,QAAQ,CAAC,aAAD,CAF9C;AAAA;AAAA,QAEGiB,aAFH;AAAA,QAEkBC,gBAFlB;;AAGJ,QAAMC,MAAM,GAAG,MAAMH,eAAe,CAACI,SAAS,IAAI,CAACA,SAAf,CAApC;;AACA,QAAMC,aAAa,GAAG,MAAML,eAAe,CAACI,SAAS,IAAI,CAACA,SAAf,CAA3C;;AACA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,MAAM,EAAEL,YAA9B;AAA4C,IAAA,IAAI,EAAC,IAAjD;AAAsD,IAAA,MAAM,EAAEI,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,aADH,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAJF,CADF,CADF;AAcD,CAzBD;;AA2BA,eAAeR,YAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\nimport Loading from '../Loading';\nimport { Container, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst WeatherCheck = ({\n  errMsg,\n  weatherData,\n  loading,\n  fetchErr,\n  reloadFunc,\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownValue, setDropdownValue] = useState('Select City');\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n  const onClickSelect = () => setDropdownOpen(prevState => !prevState);\n  return (\n    <Container>\n      <UncontrolledDropdown isOpen={dropdownOpen} size=\"lg\" toggle={toggle}>\n        <DropdownToggle caret>\n          {dropdownValue}\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick>Foo Action</DropdownItem>\n          <DropdownItem>Bar Action</DropdownItem>\n          <DropdownItem>Quo Action</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    </Container>\n  );\n};\n\nexport default WeatherCheck;\n"]},"metadata":{},"sourceType":"module"}